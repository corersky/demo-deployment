---
  - name: "Make sure Selinon project with name {{ SELINON_NAMESPACE }} exists"
    command: oc new-project {{ SELINON_NAMESPACE }}
    ignore_errors: true

  - name: "Make sure we use project {{ SELINON_NAMESPACE }}"
    command: oc project {{ SELINON_NAMESPACE }}

  # Deployment config and secrets

  - name: "Create secrets template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} --filename ../openshift/secret.yaml

  - name: "Create secrets template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/selinon-secret \
      -p API_APP_SECRET="{{ API_APP_SECRET }}" \
      -p S3_KEY_ID="{{ S3_KEY_ID }}" \
      -p S3_SECRET_KEY="{{ S3_SECRET_KEY }}" \
      -p MONGO_PASSWORD="{{ MONGO_PASSWORD }}" \
      -p MONGO_ADMIN_PASSWORD="{{ MONGO_ADMIN_PASSWORD }}" \
      -p POSTGRES_PASSWORD="{{ POSTGRES_PASSWORD }}"

  - name: "Create ConfigMap template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} --filename ../openshift/configmap.yaml

  - name: "Create ConfigMap from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/selinon-configmap \
      -p POSTGRESQL_USER="{{ POSTGRESQL_USER }}" \
      -p POSTGRESQL_DATABASE="{{ POSTGRESQL_DATABASE }}" \
      -p POSTGRESQL_PORT="{{ POSTGRESQL_PORT }}" \
      -p POSTGRESQL_HOST="{{ POSTGRESQL_HOST }}" \
      -p PGBOUNCER_HOST="{{ PGBOUNCER_HOST }}" \
      -p PGBOUNCER_PORT="{{ PGBOUNCER_PORT }}" \
      -p MONGODB_USER="{{ MONGODB_USER }}" \
      -p MONGODB_DATABASE="{{ MONGODB_DATABASE }}" \
      -p REDIS_PORT="{{ REDIS_PORT }}" \
      -p REDIS_HOST="{{ REDIS_HOST }}" \
      -p REDIS_DATABASE="{{ REDIS_DATABASE }}"

  # Image streams for upstream images

  - name: "Import Fedora s2i ImageStreamTags from upstream registry"
    command: "oc tag --namespace {{ SELINON_NAMESPACE }} registry.fedoraproject.org/f26/s2i-base:latest f26-s2i:latest"

  - name: "Import CentOS7 s2i ImageStreamTags from upstream registry"
    command: "oc tag --namespace {{ SELINON_NAMESPACE }} docker.io/centos/python-36-centos7:latest python-36-centos7:latest"

  - name: "Import CentOS7 ImageStreamTags from upstream registry"
    command: "oc tag --namespace {{ SELINON_NAMESPACE }} docker.io/library/centos:7 centos:7"

  - name: "Import RabbitMQ ImageStreamTags from upstream registry"
    command: "oc tag --namespace {{ SELINON_NAMESPACE }} docker.io/library/rabbitmq:3.7.4-management rabbitmq:3.7.4-management"

  - name: "Import PostgreSQL ImageStreamTags from upstream registry"
    command: "oc tag --namespace {{ SELINON_NAMESPACE }} docker.io/centos/postgresql-94-centos7 postgres:9.4"

  - name: "Import Redis ImageStreamTags from upstream registry"
    command: "oc tag --namespace {{ SELINON_NAMESPACE }} docker.io/library/redis:3.2.11 redis:3.2.11"

  - name: "Import MongoDB ImageStreamTags from upstream registry"
    command: "oc tag --namespace {{ SELINON_NAMESPACE }} docker.io/openshift/mongodb-24-centos7 mongo:2.4"

  - name: "Import Minio ImageStreamTags from upstream registry"
    command: "oc tag --namespace {{ SELINON_NAMESPACE }} docker.io/minio/minio:latest minio:latest"

  - name: "Import Celery-Flower ImageStreamTags from upstream registry"
    command: "oc tag --namespace {{ SELINON_NAMESPACE }} docker.io/crgwbr/docker-celery-flower celery-flower:latest"

  - name: "Import Mongo-express ImageStreamTags from upstream registry"
    command: "oc tag --namespace {{ SELINON_NAMESPACE }} docker.io/library/mongo-express mongo-express:0.45.0"

  - name: "Import Redis-commander ImageStreamTags from upstream registry"
    command: "oc tag --namespace {{ SELINON_NAMESPACE }} docker.io/rediscommander/redis-commander redis-commander:latest"

  - name: "Import pgweb ImageStreamTags from upstream registry"
    command: "oc tag --namespace {{ SELINON_NAMESPACE }} docker.io/harrygulliford/pgweb pgweb:latest"

  # Image streams for our images

  - name: "Create API ImageStream template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-api/master/openshift/image_stream.yaml

  - name: "Create API ImageStream from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/api-imagestream

  - name: "Create worker ImageStream template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-worker/master/openshift/image_stream.yaml

  - name: "Create worker ImageStream from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/worker-imagestream

  # Build configs for our apps

  - name: "Create API BuildConfig template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-api/master/openshift/build_config.yaml

  - name: "Create API BuildConfig from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/api-buildconfig

  - name: "Create worker BuildConfig template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-worker/master/openshift/build_config.yaml

  - name: "Create worker BuildConfig from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/worker-buildconfig

  # Deployment configs for our apps

  - name: "Create API DeploymentConfig template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-api/master/openshift/deployment_config.yaml

  - name: "Create API DeploymentConfig from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/api-deploymentconfig

  - name: "Create worker DeploymentConfig template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-worker/master/openshift/deployment_config.yaml

  - name: "Create worker DeploymentConfig from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/worker-deploymentconfig

  # Deployments of storages

  - name: "Create Minio S3 template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-deployment/master/openshift/minio_deployment_config.yaml

  - name: "Create Minio S3 from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/minio-deploymentconfig

  - name: "Create MongoDB template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-deployment/master/openshift/mongo_deployment_config.yaml

  - name: "Create MongoDB from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/mongo-deploymentconfig

  - name: "Create mongo-express template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-deployment/master/openshift/mongo-express_deployment_config.yaml

  - name: "Create mongo-express from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/mongo-express-deploymentconfig

  - name: "Create PostgreSQL template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-deployment/master/openshift/postgres_deployment_config.yaml

  - name: "Create PostgreSQL from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/postgres-deploymentconfig

  - name: "Create pgweb template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-deployment/master/openshift/pgweb_deployment_config.yaml

  - name: "Create pgweb from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/pgweb-deploymentconfig

  - name: "Create Redis template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-deployment/master/openshift/redis_deployment_config.yaml

  - name: "Create Redis from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/redis-deploymentconfig

  - name: "Create redis-commander template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-deployment/master/openshift/redis-commander_deployment_config.yaml

  - name: "Create redis-commander from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/redis-commander-deploymentconfig

  # Use pgbouncer

  - name: "Create pgbouncer ImageStream template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-pgbouncer/master/openshift/image_stream.yaml

  - name: "Create pgbouncer BuildConfig template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-pgbouncer/master/openshift/build_config.yaml

  - name: "Create pgbouncer DeploymentConfig template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-pgbouncer/master/openshift/deployment_config.yaml

  - name: "Create pgbouncer ImageStream from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/pgbouncer-imagestream

  - name: "Create pgbouncer BuildConfig from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/pgbouncer-buildconfig

  - name: "Create pgbouncer DeploymentConfig from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/pgbouncer-deploymentconfig

  #
  # RabbitMQ broker
  #
  - name: "Create RabbitMQ ImageStream template"
    command: oc create --namespace {{ SELINON_NAMESPACE }} \
      --filename https://raw.githubusercontent.com/selinon/demo-deployment/master/openshift/rabbitmq_deployment_config.yaml

  - name: "Create RabbitMQ DeploymentConfig from template"
    command: oc new-app --template {{ SELINON_NAMESPACE }}/rabbitmq-deploymentconfig

# TODO:
#   * server
#   * worker
#   * config maps
#   * secrets
