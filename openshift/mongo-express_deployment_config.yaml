apiVersion: v1
kind: Template
labels:
  template: mongo-express-deploymentconfig
  thoth: 1.0.0
metadata:
  name: mongo-express-deploymentconfig
  annotations:
    description: Selinon Mongo Express
    openshift.io/display-name: 'Selinon: Mongo Express'
    version: 1.0.0
    tags: poc,selinon,mongo-express
    template.openshift.io/documentation-url: https://github.com/selinon/
    template.openshift.io/long-description: Selinon Mongo Express deployment configuration template.
    template.openshift.io/provider-display-name: Fridolin Pokorny

objects:

- kind: Route
  apiVersion: v1
  metadata:
    name: mongo-express
    labels:
      app: selinon-storages
      component: mongo-express
  spec:
    to:
      kind: Service
      name: mongo-express

- kind: Service
  apiVersion: v1
  metadata:
    labels:
      service: mongo-express
      app: selinon-storages
      component: mongo-express
    name: mongo-express
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8081
    selector:
      service: mongo-express


- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: mongo-express
      app: selinon-storages
      component: mongo-express
    name: mongo-express
  spec:
    replicas: 1
    selector:
      service: mongo-express
    template:
      metadata:
        labels:
          service: mongo-express
      spec:
        containers:
        - env:
          - name: ME_CONFIG_MONGODB_ENABLE_ADMIN
            value: 'false'
          - name: ME_CONFIG_MONGODB_AUTH_USERNAME
            value: user
          - name: ME_CONFIG_MONGODB_AUTH_PASSWORD
            value: mongo
          - name: ME_CONFIG_MONGODB_AUTH_DATABASE
            value: selinon
          name: mongo-express
          ports:
            - containerPort: 8081
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "125m"
            limits:
              memory: "256Mi"
              cpu: "500m"
              #          readinessProbe:
              #            httpGet:
              #              path: '/'
              #              port: 5555
              #              scheme: HTTP
              #            initialDelaySeconds: 5
              #            periodSeconds: 10
              #            timeoutSeconds: 10
              #          livenessProbe:
              #            # TODO: create liveness
              #            httpGet:
              #              path: '/'
              #              port: 5555
              #              scheme: HTTP
              #            initialDelaySeconds: 5
              #            periodSeconds: 60
              #            timeoutSeconds: 10
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - mongo-express
        from:
          kind: ImageStreamTag
          name: 'mongo-express:0.45.0'
