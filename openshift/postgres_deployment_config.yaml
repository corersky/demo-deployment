apiVersion: v1
kind: Template
labels:
  template: postgres-deploymentconfig
  thoth: 1.0.0
metadata:
  name: postgres-deploymentconfig
  annotations:
    description: Selinon PostgreSQL
    openshift.io/display-name: 'Selinon: PostgreSQL'
    version: 1.0.0
    tags: poc,selinon,postgres
    template.openshift.io/documentation-url: https://github.com/selinon/
    template.openshift.io/long-description: Selinon PostgreSQL deployment configuration template.
    template.openshift.io/provider-display-name: Fridolin Pokorny

objects:
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      service: postgres
      app: selinon-storages
      component: postgres
    name: postgres
  spec:
    ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      service: postgres

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: postgres
      app: selinon-storages
      component: postgres
    name: postgres
  spec:
    replicas: 1
    selector:
      service: postgres
    template:
      metadata:
        labels:
          service: postgres
      spec:
        containers:
        - env:
          - name: POSTGRESQL_PASSWORD
            value: postgres
          - name: POSTGRESQL_USER
            value: user
          - name: POSTGRESQL_DATABASE
            value: selinon
          name: postgres
          ports:
            - containerPort: 5432
              protocol: TCP
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "750m"
              #          readinessProbe:
              #            httpGet:
              #              path: '/'
              #              port: 5555
              #              scheme: HTTP
              #            initialDelaySeconds: 5
              #            periodSeconds: 10
              #            timeoutSeconds: 10
              #          livenessProbe:
              #            # TODO: create liveness
              #            httpGet:
              #              path: '/'
              #              port: 5555
              #              scheme: HTTP
              #            initialDelaySeconds: 5
              #            periodSeconds: 60
              #            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: postgres-volume
        volumes:
        - name: postgres-volume
          emptyDir: {}

    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - postgres
        from:
          kind: ImageStreamTag
          name: 'postgres:9.4'
